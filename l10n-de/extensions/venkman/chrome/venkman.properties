#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

# NOTE ON LEADING/TRAILING SPACES AND QUOTES…
# Strings in this file are stripped of leading and trailing quotes, if they are
# present.  This allows you to express leading and trailing whitespace, which
# would otherwise be trimmed by the stringbundle code.  In order to express
# a leading or trailing quote, use two of them.
#
# For example…
#
# my.message1 = "          foo"
# my.message2 = "          foo
#  Both of these produce 10 spaces, followed by the word ``foo''.
# my.message3 = "foo          "
# my.message3 = foo          "
#  Both of these produce the word ``foo'', followed by 10 spaces.
# my.message4 = A sphincter says, "what?""
# my.message4 = "A sphincter says, "what?""
#  Both of these produce the phrase ``A sphincter says "what?"''
#

# character set to convert unicode messages to before writing them to a
# profile report, or generated help text.
msg.report.charset = utf-8
msg.locale.version = 0.9.88
msn.bad.locale     = Diese Version von Venkman soll mit einer ''%1$S''-Lokalisierung arbeiten, aber Sie verwenden eine Lokalisierung, die als ''%2$S'' markiert ist. Möglicherweise gibt es damit Probleme. Bitte wechseln Sie die Standardlokalisierung oder aktualisieren Sie Ihr Sprachpaket.

msg.release.url = http://www.seamonkey.at/releases/

## exception descriptions ##
err.notimplemented = Nicht implementiert
err.required.param = Benötigter Parameter %1$S fehlt
err.invalid.param  = Ungültiger Wert für Parameter %1$S (%2$S)
# 1 url, 2 fileName, 3 lineNumber, 4 reason
err.subscript.load = Fehler beim Laden eines Subskripts von <%1$S>.
err.no.debugger    = JS-Debugger-Service ist nicht installiert. (Vielleicht wurde diese Anwendung mit --disable-jsd erstellt [siehe about:buildconfig], was die für Venkman benötigte Kernunterstützung unterdrückt. Sie können das lösen, indem Sie ohne diese Option neu kompilieren oder sich bei Ihrem Lieferanten beschweren [der dieses Flag nicht verwenden sollte].)
err.failure        = Operation fehlgeschlagen: %1$S
err.no.stack       = Kein Stack

## error messages ##
msn.err.unknown.reason  = Unbekannter Grund
msn.err.required.param  = Benötigter Parameter %1$S fehlt
msn.err.invalid.param   = Ungültiger Wert für Parameter %1$S (%2$S)
msn.err.invalid.pref    = Ungültiger Wert für Eigenschaft %1$S (%2$S)
msn.err.scriptload      = Fehler beim Laden eines Subskripts von <%1$S>.
msn.err.no.source       = Keine geladenen Skripte stimmen mit ''%1$S'' überein.
msn.err.no.command      = Kein Kommando namens ''%1$S''.
msn.err.no.such.view    = Keine solche Ansicht ''%1$S''.
msg.err.no.stack        = Kein Stack
msg.err.no.eval.object  = Kein Objekt für Berechnungen ausgewählt
msn.err.noscript        = Keine debugbaren Skripte gefunden für ''%1$S''.
msn.err.disabled        = Entschuldigung, ''%1$S'' ist momentan deaktiviert
msn.err.notimplemented  = Entschuldigung, ''%1$S'' ist nicht implementiert
msn.err.ambigcommand    = Unklares Kommando, ''%1$S'', %2$S Kommandos stimmen mit [%3$S] überein
msn.err.bp.noline       = Keine Skripte, die mit <%1$S> übereinstimmen, enthalten ausführbaren Code auf Zeile %2$S
msn.err.bp.nodice       = Kein Haltepunkt gesetzt in <%1$S> Zeile %2$S
msn.err.startup         = Eine Exception ist während der Initialisierung aufgetreten, bitte melden Sie einen Bug.\n%1$S
msn.err.cant.match      = Fehler beim Laden der Vorlage: Keine Übereinstimmung mit ''%1$S'' gefunden.
msg.err.internal.bpt    = Interner Fehlerbehandlungs-Haltepunkt.
msn.err.internal.hook   = Interner Fehler beim Verarbeiten des Hooks ''%1$S''.
msn.err.failure         = Operation fehlgeschlagen: %1$S
msn.err.no.section      = Fehlende Sektion vor ''%1$S'' in <%2$S>.
msn.err.no.template     = Keine Einstellung für eine Vorlage namens ''%1$S''.
msn.err.not.a.dom.node  = Ausdruck "%1$S" ist kein DOM-Knoten.
msn.err.internal.dispatch  = Interner Fehler beim Senden des Kommandos ''%1$S''.
msn.err.source.load.failed = Fehler beim Laden der URL <%1$S>: %2$S.
msn.err.no.such.container  = Kein solcher Container ''%1$S''.
msg.err.condition.failed   = Fehler beim Berechnen der Haltepunkt-Bedingung.
msn.err.condition.security = Sicherheitsfehler beim Auswerten der Haltepunkt-Bedingung: ''%1$S''.
msg.err.format.not.available = Quelle nicht im angeforderten Format verfügbar.
msn.err.no.function     = Zeile %1$S in <%2$S> ist kein Teil einer ausführbaren Funktion.
msn.jsdurl.errpage = <html><head><title>Fehler</title></head><body>Fehler beim Laden von &lt;<b>%1$S</b>&gt;<br>%2$S</body></html>
msg.err.jsdurl.parse     = Fehler beim Parsen der URL.
msg.err.jsdurl.nosource  = URL hat keine Text-Quelle.
msg.err.jsdurl.noservice = Kein solcher Dienst.
msg.err.jsdurl.search    = Fehler in Suchmaske.
msg.err.jsdurl.sourcetext = Fehler beim Finden des Quelltextes.
msn.err.jsdurl.template  = Fehler beim Laden der Vorlage namens ''%1$S''.
msn.err.meta.failed      = Fehler beim Verarbeiten des Meta-Kommentars ``%1$S'' in <%2$S>, Zeile %3$S.
msg.err.this.not.object  = Das Ergebnis der Berechnung muss ein Objekt sein.
msn.err.unknown.pref     = Unbekannter Einstellungsname '%1$S'.
msn.err.eval.security    = Sicherheitsfehler beim Auswerten eines Ausdrucks: ''%1$S''.

## "values" ##
msg.val.unknown     = <unbekannt>
msg.val.console     = x-jsd:interactive-session
msg.val.na          = <not-available>
msg.val.none         = <keine>
msg.val.object      = <object>
msg.val.expression  = <expression>
msg.val.proto       = [[Prototype]]
msg.val.parent      = [[Parent]]

## words ##
msg.val.min         = min
msg.val.max         = max
msg.val.this        = this
msg.val.breakpoint  = Haltepunkt
msg.val.debug       = Fehlerbehandlung
msg.val.debugger    = Debugger-Schlüsselwort
msg.val.throw       = Ausgelöster Ausnahmefehler
msg.val.global      = global
msg.val.scope       = Gültigkeitsbereich
msg.val.exception   = Ausnahmefehler
msg.val.on          = ein
msg.val.off         = aus
msg.val.tlscript    = __toplevel__
msg.val.toscript    = [TimeoutScript]
msg.val.ivscript    = [IntervalScript]
msg.val.evscript    = [EvalScript]
msg.url.native      = x-jsd:native-code

## types ##
msg.type.int        = integer
msg.type.boolean    = boolean
msg.type.double     = double
msg.type.function   = function
msg.type.null       = null
msg.type.object     = object
msg.type.string     = string
msg.type.unknown    = unknown
msg.type.void       = void

msg.class.xpcobj       = XPComponent
msg.class.const.xpcobj = const XPComponent
msg.class.native.fun   = Native Funktion
msg.class.script.fun   = Skript-Funktion

## messages ##
msg.query.close      = Es findet gerade Debugging statt, trotzdem schließen?
msg.status.default   = Willkommen beim JavaScript-Debugger
msn.status.loading   = Lade Quelle für ''%1$S''
msn.status.marking   = Markiere Quelle für ''%1$S''
msn.status.stopped   = Gestoppt in %1$S, %2$S
msn.floater.title    = JSD: %1$S

msg.alert   = Warnung
msg.prompt  = Aufforderung
msg.confirm = Bestätigen

msg.cant.pprint      = Kann PrettyPrint nicht für diese Funktion verwenden.

msg.slash.required   = DIE DINGE HABEN SICH GEÄNDERT: Standardmäßig beginnen alle Kommandos jetzt mit einem Schrägstrich ('/'). Jeglicher Text, der NICHT mit einem Schrägstrich beginnt, wird dem ''eval''-Kommando übergeben. Um beispielsweise das ''step''-Kommando auszuführen, geben Sie ''/step'' ein. Um ''1 + 1'' zu berechnen, geben Sie einfach ''1 + 1'' ein. Wenn Sie das vorherige Verhalten bevorzugen, geben Sie ''/pref sessionView.requireSlash false'' ein.

msg.commasp          = , "
msn.eval.in          = %1$S: %2$S"
msn.stop             = Gestoppt für %1$S.
msn.cont             = Setzt ab %1$S fort.
msn.subscript.loaded = Sub-Skript <%1$S> geladen mit dem Ergebnis ''%2$S''.
# 1 exception name, 2 fileName, 3 lineNumber
msn.eval.error       = %1$S: <%2$S>, Zeile %3$S
msn.eval.threw       = Exception abgefangen: ''%1$S
msg.hello            = Willkommen bei ''Venkman'', dem JavaScript-Debugger. Bitte lesen Sie die FAQ auf <http://www.hacksrus.com/~ginda/venkman/faq/venkman-faq.html>. Besuchen Sie die Venkman-Homepage <http://www.mozilla.org/projects/venkman/> für weitere Informationen.
msn.version          = Sie verwenden Venkman Version %1$S.
msn.tip1.help        = Verwenden Sie ''%1$Shelp <command-name>'', um Hilfe für spezifische Kommandos zu bekommen.
msg.tip2.help        = Besuchen Sie <x-jsd:help> für eine durchsuchbare Kommando-Referenz.
msg.tip3.help        = Kommandos beginnen mit einem Schrägstrich ('/'). Jeglicher Text, der NICHT mit einem Schrägstrich beginnt, wird als JavaScript ausgewertet.  Um beispielsweise das ''step''-Kommando auszuführen, geben Sie ''/step'' ein.  Um ''1 + 1'' auszuwerten, geben Sie einfach ''1 + 1'' ein.
msg.no.breaks.set    = Keine Haltepunkte gesetzt.
msg.no.fbreaks.set   = Keine Zukünftigen Haltepunkte gesetzt.
msg.no.watches.set   = Keine Beobachtungen gesetzt.
msn.no.properties     = %1$S hat keine Eigenschaften.
msn.no.cmdmatch      = Keine Kommandos stimmen mit ''%1$S'' überein.
msn.cmdmatch         = Kommandos, die mit ''%1$S'' übereinstimmen, sind [%2$S].
msn.cmdmatch.all     = Implementierte Kommandos sind %1$S.
msn.props.header     = Eigenschaften von %1$S im Bezugsbereich des Debug-Ziels:
msn.propsd.header    = Eigenschaften von %1$S im Bezugsbereich des Debuggers:
msn.bp.header        = %1$S Haltepunkte gesetzt:
# 1 index, 2 file name, 3 line
msn.bp.line          = #%1$S <%2$S> Zeile %3$S
msn.bp.created       = Haltepunkt in <%1$S> Zeile %2$S erzeugt
msn.bp.cleared       = Haltepunkt in <%1$S> Zeile %2$S gelöscht
msn.bp.exists        = Haltepunkt in <%1$S> Zeile %2$S bereits gesetzt.
msn.watch.header     = %1$S Beobachtungen gesetzt:
msn.enter.expression = Geben Sie einen Ausdruck für den neuen Wert von ''%1$S'' ein:

# 1 index, 2 file name, 3 line
msn.fbp.line         = #%1$S <%2$S> Zeile %3$S
msn.fbp.created      = Zukünftiger Haltepunkt in <%1$S> Zeile %2$S erstellt.
msn.fbp.cleared      = Zukünftiger Haltepunkt in <%1$S> Zeile %2$S gelöscht.
msn.fbp.exists       = Zukünftiger Haltepunkt in <%1$S> Zeile %2$S bereits gesetzt.
msn.source.line      = %1$S: %2$S"
msg.emode.ignore     = Fehler werden jetzt ignoriert.
msg.emode.trace      = Fehler werden jetzt verfolgt.
msg.emode.break      = Fehler stoppen jetzt das Debug-Ziel.
msg.tmode.ignore     = Exceptions werden jetzt ignoriert.
msg.tmode.trace      = Exceptions werden jetzt verfolgt.
msg.tmode.break      = Exceptions stoppen jetzt das Debug-Ziel.
msn.iasmode          = Beim Starten initialisieren ist jetzt %1$S.
msn.layout.list      = Die folgenden Layouts wurden bereits gespeichert [%1$S].  Verwenden Sie ''save-layout <name>'', um das aktuelle Layout zu speichern, oder ''restore-layout <name>'', um ein spezifisches Layout wiederherzustellen.
msn.chrome.filter    = Chrome-Filterung ist jetzt %1$S.
# 1 value, 2 frame
msn.exception.trace  = Exception ''%1$S'' verursacht von %2$S.
# 1 message, 2 flags, 3 file, 4 line, 5 pos
msn.erpt.error       = Fehler ''%1$S'' [%2$S] in Datei ''%3$S'', Zeile %4$S, Buchstabe %5$S.
msn.erpt.warn        = Warnung ''%1$S'' [%2$S] in Datei ''%3$S'', Zeile %4$S, Buchstabe %5$S.
msn.profile.lost     = Profiling-Daten für Skript %1$S wurden verloren.
msn.profile.state    = Profiling-Datensammlung ist jetzt %1$S.
msn.profile.saved    = Profiling-Daten in <%1$S> gespeichert.
msg.profile.cleared  = Profiling-Daten gelöscht.
msn.profile.saving   = Generiere Profiling-Bericht, Datei %1$S von %2$S
msg.open.file        = Datei öffnen…
msg.save.file        = Speichern unter…
msg.open.url         = Eine URL zum Laden eingeben…
msn.maxtabs.reached  = Die maximale Anzahl an Quellcode-Ansichten (%1$S) wurde erreicht. Ändern Sie die Einstellung "source2View.maxTabs", wenn Sie diese Grenze ändern wollen. Der Quellcode wird jetzt in einem existierenden Tab geladen.
msg.maxtabs.alert    = Das nächste Mal wieder warnen, wenn dies passiert.
msg.save.profile     = Profiling-Daten speichern unter…
msg.save.source      = Quelltext speichern unter…
msg.navigator.xul    = Navigator-Fenster
msg.browser.xul      = Browserfenster
msg.enter.watch      = Ausdruck zum Beobachten eingeben:

## property value flags ##
msg.vf.enumerable = e
msg.vf.readonly   = r
msg.vf.permanent  = p
msg.vf.alias      = A
msg.vf.argument   = a
msg.vf.variable   = v
msg.vf.error      = E
msg.vf.exception  = X
msg.vf.hinted     = h

## formatting ##

# 1: argument name, 2: value
msn.fmt.argument = %1$S=%2$S"
# 1: property flags, 2: property name, 3: property value
msn.fmt.property = [%1$S] %2$S = %3$S"
# 1: function name, 2: filename
msn.fmt.script = Funktion %1$S in <%2$S>
# 1: function name, 2: arguments, 3: filename, 4: line number
msn.fmt.frame = Funktion %1$S(%2$S) in <%3$S> Zeile %4$S
# 1: type, 2: class name, 3: value
msn.fmt.value.long = [%1$S] [Klasse: %2$S] %3$S"
# 1: type, 2: value
msn.fmt.value.med  = [%1$S] %2$S"
# 1: type, 2: value
msn.fmt.value.short = %1$S:%2$S"
# 1: property count
msn.fmt.object = %1$S Eigenschaften
# 1: ctor name, 2: property count
msn.fmt.object.value = {%1$S:%2$S}
# 1: JS exception name, 2: error text, 3: file name, 4: line number
msn.fmt.jsexception = %1$S: %2$S @ <%3$S> %4$S"
# 1: error number,  2: error text, 3: file name, 4: line number, 5: function name
msn.fmt.badmojo = BadMojo %1$S: %2$S @ <%3$S> Zeile %4$S (%5$S)
# 1: var number, 2: value
msn.fmt.tmp.assign = $[%1$S] = %2$S"
# 1: string length
msn.fmt.longstr = %1$S Buchstaben
# 1: command name 2: parameters
msn.fmt.usage = %1$S %2$S
# 1: function name
msn.fmt.guessedname = [%1$S]
# 1: program counter
msn.fmt.pc = [%1$S]
# 1: pref name 2: value
msn.fmt.prefvalue = Einstellung ''%1$S'' ist ''%2$S''
# 1: index, 2: label, 3: value
msn.fmt.watch.item = %1$S: %2$S = %3$S"
# 1: on|off
msn.fmt.pprint = PrettyPrint ist %1$S.
# 1: frame number, 2: frame string
msn.fmt.frame.line = #%1$S: %2$S"
# 1: file name, 2: line number, 3: pc
msn.fmt.frame.location = %1$S, Zeile %2$S, pc %3$S
# 1: function name, 2: start line, 3: end line, 4: call count, 5: recurse,
# 6: total, 7: min, 8: max, 9: avg
msn.fmt.profile.str = %1$S: %2$S-%3$S, %4$S Aufruf(e)%5$S, %6$Sms gesamt, %7$Sms min, %8$Sms max, %9$Sms Schnitt, ausgenommene Aufrufe: %10$S
msn.fmt.profile.str2 = %1$Sms gesamt, %2$Sms min, %3$Sms max, %4$Sms Schnitt
# 1: max recurse depth
msn.fmt.profile.recurse = " (max. Tiefe %1$S)

## menu headings ##
# For these menu labels, an accesskey may be specified using a .accesskey
# string, or by prefixing the desired letter with "&" in the label.
# The accesskey string should have the form: msg.mnu.<menuname>.accesskey
msg.mnu.file = &Datei
msg.mnu.edit = B&earbeiten
msg.mnu.debug = &Debug
msg.mnu.profile = &Profiling
msg.mnu.view  = &Ansicht
msg.mnu.help  = &Hilfe
msg.mnu.tools = E&xtras
msg.mnu.emode = &Fehler-Auslöser
msg.mnu.tmode = Aus&löser betätigen
msg.mnu.showhide  = An&zeigen/Verstecken
msg.mnu.session.colors = Interaktive Sitzungs&farben
msg.mnu.scripts.instance = Date&i-Optionen
msg.mnu.scripts.wrapper  = Funk&tions-Optionen

msn.sourceheader.url   = <%1$S> Zeile %2$S
msn.default.alias.help = Dieses Kommando ist ein Alias für |%1$S|.

msn.launch.count      = Aufzeichnung des lokalen Starts %1$S, global %2$S.
msg.no.help           = Hilfe nicht verfügbar.
msn.extra.params      = Zusätzliche Parameter '%1$S' ignoriert.
msg.files.rec         = Dateien
#msg.doc.consolehdr   = Console Commands
#msg.doc.menuhdr      = Menus
#msg.doc.popuphdr     = Popups
#msg.doc.keyhdr       = Keys

msg.help.hostproblem  = Sie führen Venkman in einer Anwendung aus, in der kein Browser enthalten ist. Daher kann dieser Hilfe-Inhalt nicht angezeigt werden. Wenn Sie Venkman in Firefox, SeaMonkey oder Flock installieren, können Sie diese URL in die Adressleiste kopieren, um die Hilfe anzuzeigen: x-jsd:help . Sie können auch das "help"-Kommando mit einem Parameter verwenden, um Informationen über ein spezifisches Kommando zu bekommen.

msg.note.console     = Dieses Kommando ist auf der Konsole verfügbar.
msg.note.noconsole    = Dieses Kommando ist NICHT auf der Konsole verfügbar.
msg.note.needstack   = Sie müssen an einem Haltepunkt gestoppt haben, um dieses Kommando zu verwenden.
msg.note.nostack     = Sie dürfen NICHT an einem Haltepunkt gestoppt haben, um dieses Kommando zu verwenden.
msn.doc.commandlabel = "     Kommando-Name: ''%1$S'' (%2$S)
msn.doc.key          = "Tastaturkürzel: %1$S
msn.doc.syntax       = "           Syntax: %1$S %2$S
msg.doc.notes        = Anmerkungen:
msg.doc.description  = Beschreibung:

msn.session.css   = Interaktive Sitzung verwendet nun den CSS von <%1$S>.
msn.session.title = Interaktive Sitzung [Kontext: %1$S, Bezugsbereich: %2$S]

msg.source2.help = Bitte geben Sie eine Quelldatei zum Anzeigen an.
msg.margin.break     = " H "
msg.margin.fbreak    = " Z "
msg.margin.breakable = " - "
msg.margin.none      = "   "

msg.bpprops.title    = Haltepunkt-Eigenschaften
msg.bpprops.enabled  = Haltepunkt aktivieren
msg.fbpprops.title   = Eigenschaften des Zukünftigen Haltepunktes
msg.fbpprops.enabled = Zukünftigen Haltepunkt aktivieren

# view captions
msg.view.breaks  = Haltepunkte
msg.view.stack   = Aufruf-Stack
msg.view.session = Interaktive Sitzung
msg.view.locals  = Lokale Variablen
msg.view.scripts = Geladene Skripte
msg.view.windows = Offene Fenster
msg.view.source  = Quellcode
msg.view.source2 = Quellcode
msg.view.watches = Beobachtungen

# settings file return values
msg.breakpoints.restored = Haltepunkte wiederhergestellt.
msg.watches.restored = Beobachtungen wiederhergestellt.
msg.settings.restored = Haltepunkte und Beobachtungen wiederhergestellt.

###################### DO NO LOCALIZE THE *.params STRINGS ######################
#
# Note also that, for every command, an accesskey may be specified:
#   EITHER by prefixing the desired accesskey with "&" in the .label string,
#   OR     by specifying a .accesskey string, which is useful if the desired
#          accesskey does not occur in the label.
#
# The following are therefore equivalent:
#    cmd.foo.label = &Foo
# and
#    cmd.foo.label = Foo
#    cmd.foo.accesskey = F

## hooks ##

cmd.hook-break-clear.params = <break-wrapper>
cmd.hook-break-clear.help   = Wird aufgerufen, wenn eine Haltepunkt-Instanz gelöscht wird.

cmd.hook-break-set.params = <break-wrapper>
cmd.hook-break-set.help   = Wird aufgerufen, wenn eine Haltepunkt-Instanz gesetzt wird.

cmd.hook-debug-stop.help = Wird aufgerufen, wenn der Debugger die Ausführung des Debug-Ziels stoppt.

cmd.hook-debug-continue.help = Wird aufgerufen, wenn der Debugger mit der Ausführung des Debug-Ziels fortfährt.

cmd.hook-display-sourcetext.params = <source-text> [<target-line> [<details>]]
cmd.hook-display-sourcetext.help   = Wird aufgerufen, wenn das Quelltext-Objekt <source-text> dem Benutzer präsentiert werden soll. <target-line> ist jene Zeile, die am oder nahe dem Beginn der Ansicht erscheinen soll. Wenn <details> angegeben wird, wird es ein Objekt, das Details darüber repräsentiert, wovon das <source-text>-Objekt abgeleitet wurde.

cmd.hook-display-sourcetext-soft.params = <source-text> [<target-line> [<details>]]
cmd.hook-display-sourcetext-soft.help   = Funktioniert wie |hook-display-sourcetext|, außer dass die Ansicht nicht gescrollt wird, wenn <target-line> schon sichtbar ist.

cmd.hook-eval-done.help = Wird aufgerufen, wenn ein Ausdruck berechnet wird.

cmd.hook-fbreak-clear.params = <fbreak>
cmd.hook-fbreak-clear.help   = Wird aufgerufen, wenn eine Haltepunkt-Instanz gelöscht wird.

cmd.hook-fbreak-set.params = <fbreak>
cmd.hook-fbreak-set.help   = Wird aufgerufen, wenn eine Haltepunkt-Instanz gesetzt wird.

cmd.hook-guess-complete.params = <script-instance>
cmd.hook-guess-complete.help   = Wird aufgerufen, wenn das Erraten eines Funktionsnamens für die Skript-Instanz <script-instance> abgeschlossen wurde.

cmd.hook-session-display.params = <message> <msgtype>
cmd.hook-session-display.help   = Wird aufgerufen, wenn eine Nachricht an die interaktive Sitzungsansicht angefügt werden soll. <message> ist die Nachricht als String oder DOM-Knoten, <msgtype> ist der Code des Nachrichtentyps.

cmd.hook-script-manager-created.params = <script-manager>
cmd.hook-script-manager-created.help   = Wird aufgerufen, wenn ein neuer Skript-Manager erstellt wird. Skript-Manager delegieren Kommandos zu einem oder mehreren Skript-Instanz-Objekten. <script-manager> wird das neue Skript-Manager-Objekt. Skript-Manager können geschlüsselt nach URL im |console.scriptManagers|-Objekt gefunden werden.

cmd.hook-script-manager-destroyed.params = <script-manager>
cmd.hook-script-manager-destroyed.help   = Wird aufgerufen, nachdem <script-manager> vom |console.scriptManagers|-Objekt entfernt wurde. Das passiert, nachdem die letzte enthaltene Skript-Instanz zerstört wurde.

cmd.hook-script-instance-created.params = <script-instance>
cmd.hook-script-instance-created.help   = Wird aufgerufen, wenn eine Skript-Instanz erstellt wird. Skript-Instanzen delegieren Kommandos zu einem oder mehreren Skript-Wrappern.


cmd.hook-script-instance-sealed.params = <script-instance>
cmd.hook-script-instance-sealed.help = Wird aufgerufen, wenn <script-instance> versiegelt wird. Skript-Instanzen werden ''versiegelt'', wenn die Funktion der obersten Ebene erstellt wird. Das gibt an, dass der Skript-Quelltext vollständig kompiliert wurde. Jegliche Skripte, die keine Funktionen sind und nach diesem Punkt erstellt werden, werden als transient im übergeordneten Script-Manager erscheinen.

cmd.hook-script-callhook-instance-updated.params = <script-instance> <script-wrapper>
cmd.hook-script-callhook-instance-updated.help = Wird aufgerufen, wenn die aus einem Call-Hook erstellte <script-instance> mit einem neuen <script-wrapper> aktualisiert wird. Von Call-Hooks erstellte Skripte wurden geladen, bevor der Debugger aktiviert wurde; Ihre Komplettheit wird nie garantiert, aber sie werden fortlaufend aktualisiert.

cmd.hook-script-instance-destroyed.params = <script-instance>
cmd.hook-script-instance-destroyed.help   = Wird aufgerufen, wenn der letzte Skript-Wrapper ungültig gemacht wurde, der in <script-instance> enthalten ist.

cmd.hook-source-load-complete.params = <sourceText> <status>
cmd.hook-source-load-complete.help   = Wird aufgerufen, wenn der Quelltext, der vom Objekt <sourceText> repräsentiert wird, geladen (oder neu geladen) wird.

cmd.hook-transient-script.params = <script-wrapper>
cmd.hook-transient-script.help   = Wird aufgerufen, wenn ein Skriptobjekt von der JavaScript-Engine erstellt wird, das anscheinend transient (das Ergebnis von eval, setTimeout usw.) ist.

cmd.hook-window-closed.params = <window>
cmd.hook-window-closed.help   = Wird aufgerufen, wenn ein Fenster-Objekt zerstört wird. <window> ist eine Referenz zum DOM-Fenster-Objekt für das Fenster.

cmd.hook-window-loaded.params = <event>
cmd.hook-window-loaded.help   = Wird aufgerufen, wenn eine Quelldatei in ein Fenster-Objekt geladen wird. <event> ist eine Referenz zum DOM-Ereignis, das dem onLoad-Handler des Fensters übergeben wurde.

cmd.hook-window-opened.params = <window>
cmd.hook-window-opened.help   = Wird aufgerufen, wenn ein neues Fenster-Objekt geöffnet wird. Die Quelle dieses Fensters ist sehr wahrscheinlich zu diesem Zeitpunkt *nicht* geladen. <window> ist eine Referenz auf das DOM-Fenster-Objekt des neuen Fensters.

cmd.hook-window-resized.params = <window>
cmd.hook-window-resized.help   = Wird aufgerufen, wenn das Venkman-Hauptfenster oder ein Floating-Fenster in der Größe verändert wird. <window> wird eine Referenz auf das Fenster-Objekt.

cmd.hook-window-unloaded.params = <event>
cmd.hook-window-unloaded.help   = Wird aufgerufen, wenn eine Quelldatei von einem Fenster-Objekt entladen wird. <event> ist eine Referenz auf das DOM-Ereignis, das dem onUnload-Handler des Fensters übergeben wurde.

cmd.hook-venkman-exit.help = Wird aufgerufen, bevor der Debugger geschlossen wird.

cmd.hook-venkman-query-exit.help = Wird aufgerufen, wenn der Debugger beendet werden soll. Eine Hook-Funktion kann |returnValue| für den Event auf |false| setzen, um das Beenden abzubrechen.

cmd.hook-venkman-started.help = Wird aufgerufen, wenn der Debugger das erste Mal gestartet wird.

## commands ##

cmd.about-mozilla.label = Ü&ber Mozilla
cmd.about-mozilla.help  = Informationen über Ihre Mozilla-Installation anzeigen.

cmd.break.label  = Haltepunkt &setzen
cmd.break.params = [<url-pattern> <line-number> [<properties> [<parent>]]]
cmd.break.help   = Setzt einen Haltepunkt in allen URLs, die mit <url-pattern> übereinstimmen auf der Zeilennummer <line-number>. <properties> ist ein JavaScript-Objekt, das die Eigenschaften des Haltepunkts repräsentiert. <parent> ist eine Referenz zu einem Zukünftigen Haltepunkt-Objekt, das als 'Parent' gesetzt werden soll. Wenn keine Parameter angegeben werden, werden alle aktiven Haltepunkte aufgelistet. Siehe auch: |set-fbreak|, |clear|.

cmd.break-props.label  = Haltepunkt-&Eigenschaften…
cmd.break-props.params = <break-wrapper>
cmd.break-props.help   = Den Eigenschaften-Dialog für den Haltepunkt anzeigen, der durch <break-wrapper> repräsentiert wird.

cmd.change-container.params = <view-id> <new-type>
cmd.change-container.help   = Ändert den Typ des Containers, in dem <view-id> liegt, auf <new-type>. <view-id> muss eine der folgenden Optionen sein: ''scripts'', ''windows'', ''locals'', ''watches'', ''breaks'', ''stack'', ''source'', ''source2'', or ''session''. <new-type> muss eine der folgenden Optionen sein: ''horizontal'' für horizontales Layout, ''vertical'' für vertikales Layout oder ''tab'' für Tab-Box-Layout.

cmd.change-value.label   = &Wert ändern…
cmd.change-value.params  = <jsd-value> <property-name> <expression> [<new-value>]
cmd.change-value.help    = Ändert den Wert der Eigenschaft <property-name> (voller Pfad, um ihn zu setzen, ist <expression>) von <jsd-value> auf <new-value>. Wenn <new-value> nicht angegeben wird, dann wird danach gefragt.

cmd.chrome-filter.params = [<toggle>]
cmd.chrome-filter.help   = Aktiviert oder deaktiviert die Filterung von chrome:-URLs. Mit eingeschalteter chrome:-Filterung werden die JavaScript-Dateien, die zum Browser gehören, nicht in der Skript-Ansicht angezeigt, und der Debugger macht während des Debuggens keine Schritte durch sie. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den aktuellen Status umzukehren. Wenn <toggle> nicht angegeben wird, wird der aktuelle Status angezeigt.

cmd.clear.label  = Haltepunkt &löschen
cmd.clear.params = <url-pattern> [<line-number>]
cmd.clear.help   = Löscht Haltepunkt auf Index <breakpoint-index>. Siehe auch: break.

cmd.clear-all.label  = Alle Haltepunkte &löschen
cmd.clear-all.help   = Löscht alle derzeit definierten Haltepunkte.

cmd.clear-break.label  = Haltepunkt &löschen
cmd.clear-break.params = <break-wrapper> [<...>]
cmd.clear-break.help   = Den Haltepunkt löschen, der durch <break-wrapper> umgeben wird. Wenn <break-wrapper> ein zukünftiger Haltepunkt-Objekt ist, werden alle darunterliegenden Haltepunkte gelöscht, aber der zukünftige Haltepunkt bleibt bestehen.

cmd.clear-fbreak.label  = &Zukünftigen Haltepunkt löschen
cmd.clear-fbreak.params = <break-wrapper> [<...>]
cmd.clear-fbreak.help   = Den zukünftigen Haltepunkt löschen, der von <break-wrapper> umgeben wird. Wenn <break-wrapper> ein Haltepunktinstanz-Objekt ist, wird der übergeordnete zukünftige Haltepunkt gelöscht, aber die Instanz bleibt bestehen. Wenn die Instanz keinen übergeordneten zukünftigen Haltepunkt besitzt, wird der Befehl ignoriert.

cmd.clear-profile.label = Profiling-Da&ten Löschen
cmd.clear-profile.help  = Nullt alle existierenden Profiling-Daten aus.

cmd.clear-session.label = Interaktive Sit&zung leeren
cmd.clear-session.help  = Leert allen Text in der interaktiven Sitzungsansicht.

cmd.clear-script.label  = Haltepunkt &löschen
cmd.clear-script.params = <script-wrapper> [<...>]
cmd.clear-script.help   = Alle Haltepunkte in <script-rec> löschen.

cmd.clear-instance.label  = Haltepunkt &löschen
cmd.clear-instance.params = <script-instance> [<...>]
cmd.clear-instance.help   = Alle Haltepunkt in der Skript-Instanz löschen, die durch <script-instance> referenziert wird.

cmd.close.label = S&chließen
cmd.close.help  = Den Debugger schließen.

cmd.cmd-docommand.params = <cmd-name>
cmd.cmd-docommand.help   = 

cmd.cmd-undo.label  = &Rückgängig
cmd.cmd-undo.key    = accel Z
cmd.cmd-undo.params = 
cmd.cmd-undo.help   = Macht die letzte Bearbeitungsoperation rückgängig.

cmd.cmd-redo.label  = &Wiederholen
cmd.cmd-redo.key    = accel Y
cmd.cmd-redo.params = 
cmd.cmd-redo.help   = Wiederholt die letzte rückgängig gemachte Operation.

cmd.cmd-cut.label  = A&usschneiden
cmd.cmd-cut.key    = accel X
cmd.cmd-cut.params = 
cmd.cmd-cut.help   = Kopiert den momentan ausgewählten Text in die Zwischenablage und entfernt ihn von der Quelle.

cmd.cmd-copy.label  = &Kopieren
cmd.cmd-copy.key    = accel C
cmd.cmd-copy.params = 
cmd.cmd-copy.help   = Kopiert den aktuell ausgewählten Text in die Zwischenablage.

cmd.cmd-paste.label  = &Einfügen
cmd.cmd-paste.key    = accel V
cmd.cmd-paste.params = 
cmd.cmd-paste.help   = Fügt den Inhalt der Zwischenablage ein.

cmd.cmd-delete.label  = &Löschen
cmd.cmd-delete.key    = VK_DELETE
cmd.cmd-delete.params = 
cmd.cmd-delete.help   = Löscht die aktuelle Auswahl

cmd.cmd-selectall.label  = &Alles Auswählen
cmd.cmd-selectall.key    = accel A
cmd.cmd-selectall.params = 
cmd.cmd-selectall.help   = Wählt den gesamten Text der aktuellen Asicht aus.

cmd.cmd-copy-link-url.label  = Link-Adresse kopieren
cmd.cmd-copy-link-url.params = <url>
cmd.cmd-copy-link-url.help   = Kopiert die URL des aktuellen Links in die Zwischenablage.

cmd.cmd-mozilla-prefs.label  = &Mozilla-Einstellungen…
cmd.cmd-mozilla-prefs.params = 
cmd.cmd-mozilla-prefs.help   = 

cmd.cmd-prefs.label  = E&instellungen…
cmd.cmd-prefs.params = 
cmd.cmd-prefs.help   = 

cmd.cmd-venkman-prefs.label  = JavaScript-Debugger-&Einstellungen…
cmd.cmd-venkman-prefs.params = 
cmd.cmd-venkman-prefs.help   = 

cmd.cmd-venkman-opts.label  = &Optionen…
cmd.cmd-venkman-opts.params = 
cmd.cmd-venkman-opts.help   = 

cmd.commands.params = [<pattern>]
cmd.commands.help   = Listet alle Kommandonamen auf, die mit <pattern> übereinstimmen, oder alle Kommandonamen, wenn kein Muster angegeben wird.

cmd.copy-frames.label  = Ausgewählte Frames &kopieren
cmd.copy-frames.params = <jsd-frame> [<...>]
cmd.copy-frames.help   = Die ausgewählten Frames in die Zwischenablage kopieren.

cmd.copy-qual-name.label  = &Qualifizierten Namen kopieren
cmd.copy-qual-name.params = <expression>
cmd.copy-qual-name.help   = Kopiert den qualifizierten Wert einer Variablen in die Zwischenablage.

cmd.cont.label = &Fortsetzen
cmd.cont.key   = VK_F5
cmd.cont.tip   = Debuggen fortsetzen
cmd.cont.help  = Ausführen des Debug-Ziels fortsetzen.

cmd.debug-script.label  = Nicht &debuggen
cmd.debug-script.params = <toggle> <script-wrapper> [<...>]
cmd.debug-script.help   = Debuggen in der Skript-Umgebung <script-wrapper> aktivieren oder deaktivieren. Während Debuggen deaktiviert ist, stoppt Venkman *nicht* in den deaktivierten Skripten. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den aktuellen Status umzukehren.

cmd.debug-instance-on.label  = &Kein Debuggen der enthaltenen Funktionen
cmd.debug-instance-on.params = <script-instance> [<...>]
cmd.debug-instance-on.help   = Debuggen in allen Funktionen deaktivieren, die in der Skript-Instanz <script-instance> enthalten sind.

cmd.debug-instance-off.label  = &Debuggen der enthaltenen Funktionen
cmd.debug-instance-off.params = <script-instance> [<...>]
cmd.debug-instance-off.help   = Debuggen in allen Funktionen aktivieren, die in der Skript-Instanz <script-instance> enthalten sind.

cmd.debug-instance.label  = Debuggen der enthaltenen Funktionen &umschalten
cmd.debug-instance.params = <toggle> <script-instance> [<...>]
cmd.debug-instance.help   = Debuggen in allen Funktionen aktivieren oder deaktivieren, die in der Skript-Instanz <script-instance> enthalten sind. Während Debuggen deaktiviert ist, stoppt Venkman *nicht* in den deaktivierten Skripten. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den aktuellen Status umzukehren.

cmd.debug-transient.label  = Kein Debuggen von Eval/Ti&meouts
cmd.debug-transient.params = <toggle> <url> [<...>]
cmd.debug-transient.help   = Debuggen von transienten Skripten (wie setTimeout() oder eval()), die mit der URL <url> assoziiert sind, aktivieren oder deaktivieren. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den aktuellen Status umzukehren.

cmd.dumpprofile.label  = Profiling-Daten 'abladen' (dump)
cmd.dumpprofile.params = [<file-name>]

cmd.dumptree.params = <tree> [<depth>]

cmd.emode.params = [<mode>]
cmd.emode.help   = Setzt die Aktion, die der Debugger durchführen soll, wenn im Debug-Ziel ein Fehler passiert. |emode ignore| ignoriert alle Fehler, |emode trace| zeigt ein Log des Fehlers in der Konsole und |emode break| stoppt die Ausführung, wenn ein Fehler auftritt. |emode| ohne Parameter zeigt den aktuellen Fehler-Modus an. Beachten Sie, dass |emode| steuert, was passiert wenn ein Ausnahmefehler (exception) nicht abgefangen wird, um zu steuern, was passiert, wenn ein Ausnahmefehler *auftritt*, verwenden Sie |tmode|.

cmd.eval.params = <expression>
cmd.eval.help   = Führt <script-text> im Bezugsbereich des aktuellen Frames des Debug-Ziels aus. Siehe auch: frame, where, props, und evald.

cmd.evald.params = <expression>
cmd.evald.help   = Führt <script-text> im Bezugsbereich des Debuggers aus. Siehe auch: eval.

cmd.em-break.label  = Bei Fehle&rn stoppen
cmd.em-cycle.label  = Fehler-Modus wechseln
cmd.em-cycle.key    = accel shift  E
cmd.em-ignore.label = Fehler ig&norieren
cmd.em-trace.label  = Fehler &verfolgen

cmd.fbreak.label  = &Zukünftigen Haltepunkt setzen
cmd.fbreak.params = [<url-pattern> <line-number> [<properties>]]
cmd.fbreak.help   = Setzt eine ''zukünftigen'' Haltepunkt. Immer, wenn ein Script geladen wird, dessen Dateiname mit <file-name> übereinstimmt, wird ein Haltepunkt auf <line-number> gesetzt.  Das Setzen eines Haltepunkts auf Zeile 1 bringt den Debugger dazu, dass er unterbricht, wenn das Skript geladen wird. freak ohne Parameter listet alle zukünftigen Haltepunkte auf.  <properties> ist ein JavaScript-Objket, das alle Eigenschaften für diesen Haltepunkt repräsentiert.  Dieses Kommando ist das gleiche wie |set-fbreak|, nur dass die Parameter optional sind.  Siehe auch: |break|.

cmd.set-break.label  = Haltepunkt &setzen
cmd.set-break.params = <url-pattern> <line-number> [<properties> [<parent>]]
cmd.set-break.help   = Setzt einen Haltepunkt in allen URLs, die mit <url-pattern> übereinstimmen auf der Zeilennummer <line-number>. <properties> ist ein JavaScript-Objekt, das die Eigenschaften des Haltepunkts repräsentiert. <parent> ist eine Referenz zu einem Zukünftigen Haltepunkt-Objekt, das als 'Parent' gesetzt werden soll. Dies ist dasselbe wie das |break|-Kommando, nur dass die Parameter benötigt werden. Siehe auch: |break|, |clear|.

cmd.set-fbreak.label = &Zukünftigen Haltepunkt setzen
cmd.set-fbreak.params = <url-pattern> <line-number> [<properties>]
cmd.set-fbreak.help   = Setzt einen ''zukünftigen'' Haltepunkt. Jedes Mal, wenn ein Skript geladen wird, dessen Name mit <url-pattern> übereinstimmt, wird ein Haltepunkt auf Zeilennummer <line-number> gesetzt.  Das Setzen eines Haltepunkts auf Zeile 1 lässt den Debugger beim Laden des Skripts unterbrechen.  <properties> ist ein JavaScript-Objekt, das Eigenschaften für diesen Haltepunkt repräsentiert.  Dieses Kommando ist das gleiche wie |fbreak|, außer dass die Parameter nicht optional sind.  Siehe auch: |break|.

cmd.fclear.label  = Z&ukünftigen Haltepunkt löschen
cmd.fclear.params = <url-pattern> [<line-number>]
cmd.fclear.help   = Löscht die zu&künftige(n) Haltepunkt(e), die für <url-pattern> gesetzt sind.  Wenn <line-number> angegeben wird, werden nur zukünftige Haltepunkte auf dieser Zeile gelöscht.

cmd.fclear-all.label = Alle zu&künftigen Haltepunkte löschen
cmd.fclear-all.help  = Löscht alle momentan definierten zukünftigen Haltepunkte.

cmd.find-bp.label  = &Haltepunkt suchen
cmd.find-bp.params = <breakpoint>
cmd.find-bp.help   = Fokus auf den Haltepunkt setzen, der vom Haltepunkt-Satz <breakpoint-rec> angegeben wird.

cmd.find-creator.label  = &Ersteller suchen
cmd.find-creator.params = <jsd-value>
cmd.find-creator.help   = Fokus auf den Ersteller des Objekts setzen, das vom jsdl-Wert <jsd-value> angegeben wird.

cmd.find-ctor.label  = &Konstruktor suchen
cmd.find-ctor.params = <jsd-value>
cmd.find-ctor.help   = Fokus auf den Konstruktor des Objekts setzen, das vom jsdl-Wert <jsd-value> angegeben wird.

cmd.find-file.label  = Datei ö&ffnen…
cmd.find-file.key    = accel O
cmd.find-file.params = [<file-name>]
cmd.find-file.help   = Zeigt die Inhalte der Datei in der Skript-Ansicht an, die auf <file-name> zu finden ist, wobei <file-name> ein Betriebssystem-spezifischer Pfad-String ist. Wenn <file-name> nicht angegeben wird, oder der Buchstabe '?' ist, wird ein Dateiauswahl-Steuerelement angezeigt.

cmd.find-frame.label   = &Frame-Quelle suchen
cmd.find-frame.params  = <frame-index>
cmd.find-frame.help    = Fokus auf den Stack-Frame setzen, der durch den Frame-Satz <frame-rec> angegeben wird.

cmd.find-script.label  = &Funktion suchen
cmd.find-script.params = <script-wrapper> [<target-pc>]
cmd.find-script.help   = Das Skript fokussieren, das von <script-wrapper> umhüllt wird.  Wenn <target-pc> angegeben wird, wird die Ansicht zu dieser Zeile gescrollt.

cmd.find-sourcetext.params = <source-text> [<range-start> [<range-end> [<details> [<target-line>]]]]
cmd.find-sourcetext.help   = Das Quelltext-Objekt <sourceText> anzeigen. Der gesamte Text zwischen <range-start> und <range-end> wird hervorgehoben. Wenn <details> angegeben wird, wird es ein Objekt, das Details darüber repräsentiert, wovon das <source-text>-Objekt abgeleitet wurde. Wenn <target-line> angegeben wird, wird die Ansicht zu dieser Zeile gescrollt, sonst wird die Ansicht zu <range-start> gescrollt.

cmd.find-sourcetext-soft.params = <source-text> [<range-start> [<range-end> [<details> [<target-line>]]]]
cmd.find-sourcetext-soft.help   = Funktioniert wie |find-sourcetext|, außer dass die Ansicht nicht gescrollt wird, wenn <target-line> schon sichtbar ist.

cmd.find-string.label = In dieser Datei &suchen…
cmd.find-string.key   = accel F
cmd.find-string.help  = Öffnet einen ''Suchdialog'' für das aktuell ausgewählte Tab.

cmd.find-string-again.key = accel G

cmd.find-scriptinstance.label  = &Datei suchen
cmd.find-scriptinstance.params = <script-instance> [<range-start> [<range-end> [<details> [<target-line>]]]]
cmd.find-scriptinstance.help   = Den Quelltext anzeigen, der mit der Skript-Instanz <script-instance> assoziiert ist. Der gesamte Text zwischen <range-start> und <range-end> wird hervorgehoben. Wenn <details> angegeben wird, wird es ein Objekt, das Details darüber repräsentiert, wovon das <script-instance>-Objekt abgeleitet wurde. Wenn <target-line> angegeben wird, wird die Ansicht zu dieser Zeile gescrollt, sonst wird die Ansicht zu <range-start> gescrollt.

cmd.find-url.label  = &URL suchen
cmd.find-url.params = <url> [<range-start> [<range-end> [<details> [<target-line>]]]]
cmd.find-url.help   = Zeigt die Inhalte der URL <url> in der Quellcode-Ansicht an. Wenn <range-start> angegeben ist, wird der Quellcode zu dieser Zeile gescrollt. Wenn <range-end> auch angegeben wird, wird der gesamte Text zwischen <range-start> und <range-end> hervorgehoben.

cmd.find-url-soft.label  = URL &Weich fokussieren
cmd.find-url-soft.params = <url> [<range-start> [<range-end> [<details> [<target-line>]]]]
cmd.find-url-soft.help   = Zeigt die Inhalte der URL <url> in der Quellcode-Ansicht an. Wenn <line-number> nicht bereits in den mittleren zwei Dritteln der Quellcode-Ansicht ist, wird diese nicht gescrollt, sonst wird die Ansicht gescrollt, sodass <line-number> zwei Zeilen unterhalb der Oberkante der Ansicht ist.

cmd.finish.label = Schri&tt heraus
cmd.finish.key   = shift VK_F11
cmd.finish.tip   = Einen Schritt aus der aktuellen Funktion heraus machen
cmd.finish.help  = Ausführen, bis der aktuelle Stack-Frame zurückkehrt.

cmd.focus-input.key  = VK_ESCAPE
cmd.focus-input.help = Fokussiert das Text-Eingabefenster der Konsole.

cmd.frame.label  = A&ktuellen Frame setzen
cmd.frame.params = [<frame-index>]
cmd.frame.help   = Setzt den aktuellen Frame auf denjenigen, der mit <frame-index> nummeriert ist, und zeigt eine Zusammenfassung des Frames an. Wenn <frame-index> nicht angegeben wird, dann wird eine Zusammenfassung des aktuellen Frames angezeigt. Verwenden Sie das where-Kommando, um verfügbare Frames und Frame-Nummern anzuzeigen.

cmd.gc.help = Den JavaScript Garbage Collector zum Ausführen zwingen.  Das könnte ungeladene Skripte zwingen, von der Ansicht für geladene Skripte entfernt zu werden.

cmd.help.label  = &Kommando-Referenz
cmd.help.params = [<pattern>]
cmd.help.help   = Zeigt Hilfe für <pattern> an, dies kann ein vollständiger Kommandoname sein, oder die ersten paar Buchstaben eines Kommandonamens. Wenn <pattern> mit mehr als einem Kommando übereinstimmt, wird Hilfe für alle übereinstimmenden Kommandos angezeigt. Wenn <pattern> nicht angegeben wird, wird eine komplette Kommandoreferenz in die Quellcode-Ansicht geladen.

cmd.inspect.label  = Im DOM &Inspector inspizieren
cmd.inspect.params = [<expression>]
cmd.inspect.help   = Das Ergebnis von <expression> im DOM-Inspector inspizieren.

cmd.loadd.label  = Skript im Debugger-Bezugsbereich ausführen
cmd.loadd.params = <url>
cmd.loadd.help   = Führt den Inhalt der URL, die durch <url> angegeben wird, im Kontext des Debuggers aus. Nützlich für das Laden von Debugger-Plugins. Siehe auch: |initialScripts|-Einstellung.

cmd.move-view.params = <view-id> <location-url>
cmd.move-view.help   = Verschiebt die Ansicht, die mit <view-id> verknüpft ist, an die Adresse, die durch <location-url> angegeben wird.

cmd.mozilla-help.label = &Hilfe-Inhalt
cmd.mozilla-help.help  = Den Inhalt des Mozilla-Hilfesystems anzeigen.

cmd.next.label = Schritt &darüber
cmd.next.key   = VK_F12
cmd.next.tip   = Einen Schritt über einen Funktionsaufruf hinweg machen
cmd.next.help  = Die nächste Zeile des Skriptes ausführen. Wenn eine Funktion angetroffen wird, wird sie als einzelne Anweisung betrachtet.

cmd.open-dialog.params = <url> [<window-name> [<window-flags>]]
cmd.open-dialog.help   = Öffnet ein Dialogfenster und lädt die Quelle von <url>. Dies wird typischerweise verwendet, um ein neues XUL-Fenster zu öffnen, obwohl es auch verwendet werden kann, um eine Webseite ohne Chrome zu öffnen.

cmd.open-url.help  = Fordert den Benutzer auf, eine URL einzugeben, die in die Quellansicht geladen werden soll.
cmd.open-url.label = Web-Adresse &öffnen…
cmd.open-url.key   = accel shift L

cmd.pprint.params = [<toggle>]
cmd.pprint.help   = Setzt den Status des PrettyPrint-Modus oder zeigt ihn an. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den aktuellen Status umzukehren. Wenn <toggle> nicht angegeben wird, wird der aktuelle Status angezeigt.

cmd.pref.params  = [<pref-name> [<pref-value> [<delete-pref>]]]
cmd.pref.help    = Setzt die Einstellung namens <pref-name> auf den Wert <pref-value>. Wenn <pref-value> nicht angegeben wird, dann wird der aktuelle Wert von <pref-name> angezeigt. Wenn <pref-name> und <pref-value> beide ausgelassen werden, dann werden alle Einstellungen angezeigt. Wenn <delete-pref> angegeben und |true|, |on|, |yes| oder |1| ist, oder wenn <pref-name> mit einem Minuszeichen ('-') beginnt, dann wird die Einstellung auf ihren Standardwert zurückgesetzt.

cmd.profile.params = [<toggle>]
cmd.profile.help   = Aktiviert oder deaktiviert die Sammlung von Profiling-Daten. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den aktuellen Status umzukehren. Wenn <toggle> nicht angegeben wird, wird der aktuelle Status angezeigt.

cmd.profile-script.label   = Kein &Profiling
cmd.profile-script.params = <toggle> <script-wrapper> [<...>]
cmd.profile-script.help   = Profiling im Skript <script-wrapper> aktivieren oder deaktivieren. Während Profiling deaktiviert ist, werden die Daten vergessen. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den aktuellen Status umzukehren. Wenn <toggle> nicht angegeben wird, wird der aktuelle Status angezeigt.

cmd.profile-instance.label = Profilin&g enthaltener Funktionen umschalten
cmd.profile-instance.params = <toggle> <script-instance> [<...>]
cmd.profile-instance.help   = Profiling in allen Funktionen aktivieren oder deaktivieren, die in der Skript-Instanz <script-instance> enthalten sind. Während Profiling deaktiviert ist, werden die Daten vergessen. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den aktuellen Status umzukehren. Wenn <toggle> nicht angegeben wird, wird der aktuelle Status angezeigt.

cmd.profile-instance-on.label  = Kein &Profiling enthaltener Funktionen
cmd.profile-instance-on.params = <script-instance> [<...>]
cmd.profile-instance-on.help   = Profiling in allen Funktionen deaktivieren, die in der Skript-Instanz <script-instance> enthalten sind.

cmd.profile-instance-off.label  = Profiling &enthaltener Funktionen
cmd.profile-instance-off.params = <script-instance> [<...>]
cmd.profile-instance-off.help   = Profiling in allen Funktionen aktivieren, die in der Skript-Instanz <script-instance> enthalten sind.

cmd.profile-tb.label = Profiling
cmd.profile-tb.tip   = Profiling-Modus umschalten

cmd.props.params = <expression>
cmd.props.help   = Listet die Eigenschaften des Wertes auf, der von <expression> zurückgeliefert wird. Der Ausdruck wird im Bezugsbereich des aktuellen Frames des Debug-Ziels berechnet. Siehe auch: |where|, |frame|, |eval|, und |propsd|.

cmd.propsd.params = <expression>
cmd.propsd.help   = Listet die Eigenschaften des Wertes auf, der von <expression> zurückgeliefert wird. Der Ausdruck wird im Bezugsbereich des Debuggers berechnet. Siehe auch: |props|.

cmd.exit.label = B&eenden
cmd.exit.key   = accel Q

cmd.quit.label = B&eenden
cmd.quit.key   = accel Q
cmd.quit.help  = Mozilla beenden.

cmd.reload-source-tab.label  = Quelle &neu laden
cmd.reload-source-tab.params = [<index>]
cmd.reload-source-tab.key    = accel R
cmd.reload-source-tab.help   = Die Quelle im Tab neu laden, das sich am Index befindet, der durch <index> angegeben wird. Wenn <index> nicht angegeben wird, dann wird das aktuelle Tab neu geladen.

cmd.release-notes.label = &Release Notes
cmd.release-notes.help  = Zeigt die Release Notes von Mozilla an.

cmd.close-source-tab.label  = Tab s&chließen
cmd.close-source-tab.key    = accel W
cmd.close-source-tab.params = [<index>]
cmd.close-source-tab.help   = Das Tab schließen, das sich an jener Position befindet, der durch <index> angegeben wurde. Wenn <index> nicht angegeben wird, wird das aktuelle Tab geschlossen.

cmd.restore-layout.params = [<name>]
cmd.restore-layout.help   = Stellt das Ansichten-Layout namens <name> wieder her. Wenn <name> nicht angegeben wird, dann wird eine Liste der verfügbaren Layout angezeigt. Der spezielle Name |factory| kann verwendet werden, um ein Standard-Layout wiederherzustellen.

cmd.restore-settings.label  = Haltepunkt-/Beobachtungs&einstellungen wiederherstellen…
cmd.restore-settings.params = [<settings-file>]
cmd.restore-settings.help   = Dieses Kommando ist im Grunde ein Alias für |loadd|, außer dass <settings-file> optional ist. Wenn <settings-file> nicht angegeben wird oder ''?'' ist, wird eine Dateiauswahl angezeigt. Dieses Kommando ist im Kontextmenü von Haltepunkten und Beobachtungsansichten enthalten, um das Erneuern von gespeicherten Haltepunkten und Beobachtungen wiederherzustellen.

cmd.reloadui.key = accel alt R

cmd.run-to.label  = Bis &Zeile ausführen
cmd.run-to.params = <script-wrapper> <pc>
cmd.run-to.help   = Weiter ausführen, bis ein durch <pc> angegebener Programmzähler im Skript erreicht wird, das durch <script-wrapper> angegeben wird. Dies hat den Effekt, einen ''einmaligen'' Haltepunkt auf der fraglichen Zeile zu setzen.

cmd.save-default-layout.label = Standard-Layout jetzt &speichern

cmd.save-layout.params = [<name>]
cmd.save-layout.help   = Speichert das aktuelle Fenster-Layout unter dem Namen <name>. Das Layout kann später mit dem |restore-layout|-Kommando wiederhergestellt werden. Wenn <name> nicht angegeben wird, wird eine Liste der verfügbaren Layouts angezeigt. Speichern Sie unter dem Namen ''default'', um das Standard-Layout zu setzen, das Venkman beim Start wiederherstellt. Das ''factory''-Layout kann nicht überschrieben werden.

cmd.save-source-tab.label = Quelle &speichern unter…
cmd.save-source-tab.params = [<index> [<target-file>]]
cmd.save-source-tab.key   = accel S
cmd.save-source-tab.help  = Speichert den Inhalt der Quelldatei, die im Tab an der durch <index> angegebenen Position angezeigt wird, in eine Datei im lokalen System. Wenn <index> nicht angegeben wird, dann wird das aktuelle Tab gespeichert. Wenn <target-file> nicht angegeben wird oder der Buchstabe '?' ist, wird eine Dateiauswahl angezeigt. <target-file> ist ein Betriebssystem-spezifischer Pfad-String.

cmd.save-profile.label = P&rofiling-Daten speichern unter…
cmd.save-profile.params = [<target-file> [<url> [<...>]]
cmd.save-profile.help = Speichert die Profiling-Daten für eine oder mehrere Quelldateien, die durch <url> angegeben werden, in die Datei <target-file>. Wenn <target-file> nicht angegeben wird oder der Buchstabe '?' ist, wird eine Dateiauswahl angezeigt. Wenn <url> nicht angegeben wird, werden alle Profiling-Daten gespeichert. <target-file> ist ein Betriebssystem-spezifischer Pfad-String, <url> eine komplette URL.

cmd.save-breakpoints.label  = Haltepunkt-Einstellungen &speichern…
cmd.save-breakpoints.params = [<settings-file>]
cmd.save-breakpoints.help   = Die aktuelle Liste der Haltepunkte in einer JavaScript-Datei speichern, sodass sie später wiederhergestellt werden können. Wenn <settings-file> nicht angegeben wird oder ''?'' ist, wird eine Dateiauswahl angezeigt. <settings-file> kann eine Referenz zu einem |LocalFile|-Objekt oder eine String-Repräsentation eines nativen Pfades sein. Siehe auch: |save-settings|, |save-watches|, |restore-settings|.

cmd.save-settings.label  = Haltepunkt-/Beobachtungseinstellungen s&peichern…
cmd.save-settings.params = [<settings-file>]
cmd.save-settings.help   = Die aktuelle Liste der Haltepunkte und Beobachtungen in einer JavaScript-Datei speichern, sodass sie später wiederhergestellt werden können. Wenn <settings-file> nicht angegeben wird oder ''?'' ist, wird eine Dateiauswahl angezeigt. <settings-file> kann eine Referenz zu einem |LocalFile|-Objekt oder eine String-Repräsentation eines nativen Pfades sein. Siehe auch: |save-settings|, |save-watches|, |restore-settings|.

cmd.save-watches.label  = Beobachtungseinstellungen &speichern…
cmd.save-watches.params = [<settings-file>]
cmd.save-watches.help   = Die aktuelle Liste der Beobachtungen in einer JavaScript-Datei speichern, sodass sie später wiederhergestellt werden können. Wenn <settings-file> nicht angegeben wird oder ''?'' ist, wird eine Dateiauswahl angezeigt. <settings-file> kann eine Referenz zu einem |LocalFile|-Objekt oder eine String-Repräsentation eines nativen Pfades sein. Siehe auch: |save-settings|, |save-watches|, |restore-settings|.

cmd.search-scripts.params = [<pattern>]
cmd.search-scripts.help   = Entfernt alle Skripte mit URLs, die nicht mit <pattern> übereinstimmen, von der Ansicht für geladene Skripte. Wenn <pattern> nicht angegeben wird, werden alle Skripte angezeigt.

cmd.session-css.params = [<css>]
cmd.session-css.help   = Setzt die aktuelle CSS-Datei, die verwendet wird, um die Interaktive Sitzung zu gestalten. Der Wert von <css> kann der Text "default", "dark", "light" ODER eine URL der zu benutzenden CSS-Datei sein. Die "default"-CSS verwendet Ihre Browser-Standards als Vordergrund- und Hintergrundfarben, "dark" ist dunkler Hintergrund mit hellem Text, und "light" ist heller Hintergrund mit dunklem Text. Wenn <css> nicht angegeben wird, dann wird der aktuelle Wert ausgegeben.

cmd.session-css-default.label = &Browser-Standards
cmd.session-css-dark.label    = &Dunkler Hintergrund/Heller Text
cmd.session-css-light.label   = &Heller Hintergrund/Dunkler Text

cmd.set-eval-obj.label  = Als B&erechnungsobjekt setzen
cmd.set-eval-obj.params = <jsd-value>
cmd.set-eval-obj.help   = Setzt das aktuelle ''Berechnungsobjekt'', das für das |eval|-Kommando verwendet wird. Das Objekt, das durch <jsd-value> referenziert wird, wird zum |this|-Objekt und globale Variablen werden relativ zum übergeordneten Objekt von <jsd-value> aufgelöst.

cmd.scan-source.label  = Nach Meta-Kommentaren &suchen
cmd.scan-source.params = <script-instance>
cmd.scan-source.help   = Durchsucht die gesamte Quelldatei nach Kommentaren der Form //@JSD_DIRECTIVE. Standardmäßig werden die Direktiven //@JSD_LOG, //@JSD_BREAK, und //@JSD_EVAL erkannt. JSD_LOG berechnet das nachfolgende Skript und zeichnet das Ergebnis in der Interaktiven Sitzungsansicht auf. JSD_BREAK fügt einen bedingten Haltepunkt in der nächsten ausführbaren Zeile ein. JSD_EVAL berechnet das nachfolgende Skript ohne Aufzeichnung oder Anhalten. Benutzer können zusätzliche Direktiven mit Plug-Ins hinzufügen.

cmd.scope.help = Listet die Eigenschaften des obersten Objekts in der Bezugsbereich-Kette des aktuellen Frames auf.

cmd.toggle-forcescriptload.label = Erraten von Funktionsnamen erz&wingen

cmd.toggle-functions.label  = &Funktionen einbeziehen

cmd.show-functions.params = [<toggle>]
cmd.show-functions.help   = Steuert, ob die Funktionseigenschaften (manchmal als Methoden bezeichnet) in der Ansicht für lokale Variablen und Beobachtungen angezeigt werden. Nach dem Ändern dieses Werts müssen Sie die betroffenen Nodes schließen und öffnen, um die Änderung zu sehen. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den aktuellen Status umzukehren. Wenn <toggle> nicht angegeben wird, wird der aktuelle Status angezeigt.

cmd.toggle-ecmas.label  = ECMA-Eigenschaften e&inbeziehen

cmd.show-ecmas.params = [<toggle>]
cmd.show-ecmas.help   = Steuert, ob die ECMA [[Parent]]- und [[Prototype]]-Eigenschaften in der Ansicht für lokale Variablen und Beobachtungen angezeigt werden. Nach dem Ändern dieses Werts müssen Sie die betroffenen Nodes schließen und öffnen, um die Änderung zu sehen. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den aktuellen Status umzukehren. Wenn <toggle> nicht angegeben wird, wird der aktuelle Status angezeigt.

cmd.toggle-constants.label  = &Konstanten einbeziehen

cmd.show-constants.params = [<toggle>]
cmd.show-constants.help   = Steuert, ob konstante Eigenschaften in den loaklen Variablen und Überprüpfungsansichten angeziegt werden. Nach dem Ändern dieses Wertes müssen Sie betroffene Knoten schließen und wieder öffnen, um die Veränderung zu sehen. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den Status zu invertieren.  Wenn <toggle> nicht angegeben wird, wird der aktuelle Status angezeigt.

cmd.toggle-show-most-recent.label = &Duplikate ausschließen

cmd.show-most-recent.params = [<toggle>]
cmd.show-most-recent.help = Steuert, ob die Ansicht für geladene Skripte nur das aktuellste Skript einer bestimmten URL oder alle anzeigen soll. Wenn diese Funktion ausgeschaltet ist, können Sie eventuell doppelte Einträge in der geladene Skripte-Ansicht feststellen. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion einzuschalten; |false|, |off|, |no|, oder |0|, um sie auszuschalten; oder |toggle|, um den aktuellen Status umzuschalten. Wenn <toggle> nicht angegeben wird, dann wird der aktuelle Status angezeigt.

cmd.show-profile.label = Profiling-Daten an&zeigen
cmd.show-profile.params = [<url> [<...>]]
cmd.show-profile.help = Zeigt die Profiling-Daten an, die für eine oder mehrere durch <url> angegebene Quelldateien gesammelt wurden. Wenn <url> nicht angegeben wird, werden alle Profiling-Daten gespeichert.

cmd.startup-init.label  = Beim &Starten initialisieren
cmd.startup-init.params = [<toggle>]
cmd.startup-init.help   = Setzt den Status der "Initialisieren beim Start"-Funktion. Wenn diese Funktion aktiviert ist, beginnt der Debugger die Verfolgung von Skripten, wenn der Browser gestartet wird, anstatt zu warten, bis die Benutzeroberfläche gestartet wird. Das ermöglicht der Skript-Liste, Dateien anzuzeigen, die geladen wurden, bevor die Debugger-Benutzeroberfläche gestartet wurde. Diese Funktion verursacht eine *kleine* Verringerung der Performance. Der Wert von <toggle> kann |true|, |on|, |yes|, oder |1| sein, um die Funktion zu aktivieren; |false|, |off|, |no|, oder |0|, um sie zu deaktivieren; oder |toggle|, um den aktuellen Status umzukehren. Wenn <toggle> nicht angegeben wird, wird der aktuelle Status angezeigt.

cmd.source-coloring.label  = Quelltext ein&färben
cmd.source-coloring.params = [<toggle>]
cmd.source-coloring.help   = Aktiviert oder deaktiviert die Quellcode-Einfärbefunktion in der Quellcode-Ansicht. Beim Arbeiten mit großen Dateien oder langsamen Maschinen kann das Einfärben des Quelltexts zu lange dauern, um praktisch zu sein. Deaktivieren dieser Funktion verursacht deutlich schnelleres Laden von Dateien. Sie müssen den Quelltext neu laden, um die Änderungen zu sehen. Wenn <toggle> nicht angegeben wird, wird der aktuelle Status angezeigt.

cmd.stop.label = Sto&pp
cmd.stop.key   = VK_F4
cmd.stop.tip   = Die aktuelle Aktion stoppen
cmd.stop.help  = Stoppt, bevor die nächste Code-Zeile ausgeführt wird.

cmd.step.label = Schritt &hinein
cmd.step.key   = VK_F11
cmd.step.tip   = Einen Schritt in einen Funktionsaufruf hinein machen
cmd.step.help  = Führt die nächste Skript-Zeile aus und stoppt.

cmd.testargs.params = <int> <word> [<word2> <word3>]
cmd.testargs.help   = Funktion für das Testen der Bestimmung von Argumenten. Übergeben Sie ihr, was sie will, und sie spuckt das Event-Objekt auf stdout aus.

cmd.testargs1.params = <int> [<...>]
cmd.testargs1.help   = Funktion für das Testen der Bestimmung von Argumenten. Übergeben Sie ihr, was sie will, und sie spuckt das Event-Objekt auf stdout aus.

cmd.this-expr.params = <expression>
cmd.this-expr.help   = Setzt das ''Berechnungsobjekt'' auf das Ergebnis von <expression>. Das Berechnungsobjekt wird in allen Berechnungen als |this| verwendet. Das Ergebnis von <expression> *muss* ein Objekt sein. Siehe auch: |eval|, |props|, |watch-expr|, und |set-eval-obj|.

cmd.tmode.params = [<mode>]
cmd.tmode.help   = Setzt die Aktion, die der Debugger ausführen soll, wenn eine Exception vom Debug-Ziel ausgelöst wird. |tmode ignore| ignoriert alle Exceptions, |tmode trace| zeigt ein Log der Exception auf der Konsole, und |tmode break| stoppt das Ausführen, wenn eine Exception verursacht wurde. |tmode| ohne Parameter zeigt den aktuellen Modus an. Beachten Sie, dass |tmode| steuert, was passiert, wenn eine Exception *verursacht* wird, um zu steuern, was passiert, wenn eine Exception die oberste Ebene erreicht und ein Fehler wird, verwenden Sie |emode|. Die Tastenkombination Strg+T kann verwendet werden, um den Verursach-Modus umzustellen.

cmd.tm-break.label  = Bei &Exceptions stoppen
cmd.tm-cycle.label  = Exception-Modus umschalten
cmd.tm-cycle.key    = accel T
cmd.tm-ignore.label = Exceptions i&gnorieren
cmd.tm-trace.label  = Exceptions &verfolgen

cmd.toggle-scripts-search-box.help   = Schaltet die Sichtbarkeit der Suchkontrollen in der Ansicht für geladene Skripte um.

cmd.toggle-float.params = <view-id>
cmd.toggle-float.help   = Wenn die durch <view-id> angegebene Ansicht momentan im Hauptfenster angezeigt wird oder nicht sichtbar ist, wird sie in einem neuen Float-Fenster positioniert. Wenn <view-id> bereits in einem Float-Fenster ist, wird sie in das Hauptfenster zurückgeholt.

cmd.toggle-pprint.label = &PrettyPrint
cmd.toggle-pprint.key   = accel P
cmd.toggle-pprint.tip   = PrettyPrint-Modus umschalten
cmd.toggle-pprint.help  = PrettyPrint-Modus umschalten.

cmd.toggle-save-layout.label = Standardlayout beim B&eenden speichern
cmd.toggle-save-layout.help  = Wenn dies gesetzt ist, wird das Fensterlayout gespeichert, bevor Venkman beendet wird.

cmd.toggle-save-settings.label = Haltepunkt-/Beobachtungseinstellungen beim &Verlassen speichern
cmd.toggle-save-settings.help  = Wenn dies gesetzt ist, werden Haltepunkt- und Beobachtungseinstellungen vor dem Verlassen von Venkman gespeichert und beim Starten wiederhergestellt.

cmd.toggle-pref.params = <pref-name>
cmd.toggle-pref.help   = Schaltet die per <pref-name> angegebene boolesche Einstellung auf den anderen Wert um.

cmd.toggle-view.params = <view-id>
cmd.toggle-view.help   = Wenn die durch <view-id> angegebene Ansicht momentan angezeigt wird, dann wird sie versteckt. Ansonsten wird die Ansicht in ihrer letzten bekannten Position angezeigt.

cmd.toggle-chrome.label  = Anwendungsdateien a&usschließen
cmd.toggle-profile.label = Profiling-Daten sammeln

cmd.toggle-breaks.label  = &Haltepunkte
cmd.toggle-stack.label   = &Aufruf-Stack
cmd.toggle-session.label = &Interaktive Sitzung
cmd.toggle-locals.label  = &Lokale Variablen
cmd.toggle-scripts.label = Geladene S&kripte
cmd.toggle-windows.label = &Offene Fenster
cmd.toggle-source.label  = Quellcode (alt)
cmd.toggle-source2.label = Q&uellcode
cmd.toggle-watches.label  = &Beobachtungen

cmd.version.label = Über &Venkman
cmd.version.help  = Versionsinformationen anzeigen.

cmd.remove-watch.label  = Beobachtung &entfernen
cmd.remove-watch.params = <index> [<...>]
cmd.remove-watch.help   = Die Beobachtung(en) an der 0-basierten Position entfernen, der durch <index> angegeben wird.

cmd.watch-expr.label = &Beobachtungsausdruck hinzufügen…
cmd.watch-expr.params = [<watch-expression>]
cmd.watch-expr.help   = Berechnet <expression> im Bezugsbereich des Debug-Ziels und fügt die Ergebnisse zum Beobachtungsfenster hinzu. Wenn <expression> nicht angegeben wird, werden alle Beobachtungen auf der Konsole ausgegeben.

cmd.watch-exprd.params = [<watch-expression>]
cmd.watch-exprd.help   = Berechnet <expression> im Bezugsbereich des Debuggers und fügt die Ergebnisse zum Beobachtungsfenster hinzu. Wenn <expression> nicht angegeben wird, werden alle Beobachtungen auf der Konsole ausgegeben.

cmd.watch-property.params = <jsd-value> <property-name>
cmd.watch-property.help   = Fügt die Eigenschaft namens <property-name> des Objekts, das in <jsd-value> gespeichert ist, zum Beobachtungsfenster hinzu.

cmd.where.label = &Stack in Interaktiver Sitzung anzeigen
cmd.where.help = Zeigt eine zusammengefasste Liste von Stack-Frames in der aktuellen Aufrufkette an.
